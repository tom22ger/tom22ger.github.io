{"ast":null,"code":"var _jsxFileName = \"/Users/thomasadrian/Development/tom22ger.github.io/src/components/ProjectGallery/index.jsx\";\nimport React from \"react\";\n/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport Project from \"./Project\";\nexport default class ProjectGallery extends React.Component {\n  render() {\n    const renderedProjects = [];\n\n    for (let p of this.props.projects) {\n      renderedProjects.push(jsx(Project, Object.assign({}, p, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 29\n        }\n      })));\n    }\n\n    return jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"Featured Projects:\"), jsx(\"div\", {\n      css: css`\n            display: flex;\n            width: 100%;\n            overflow-x: scroll;\n            align-items: stretch;\n          `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, jsx(Project, {\n      name: \"dailybruin.com\",\n      flavor: \"a polling platform that allows you to generate and share polls all around the world\",\n      image: \"https://wp.dailybruin.com/images/2020/06/web.breaking.AL_.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), jsx(Project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), jsx(Project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/thomasadrian/Development/tom22ger.github.io/src/components/ProjectGallery/index.jsx"],"names":["React","css","jsx","Project","ProjectGallery","Component","render","renderedProjects","p","props","projects","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC1DC,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG,EAAzB;;AACA,SAAK,IAAIC,CAAT,IAAc,KAAKC,KAAL,CAAWC,QAAzB,EAAmC;AACjCH,MAAAA,gBAAgB,CAACI,IAAjB,CAAsB,IAAC,OAAD,oBAAaH,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,MAAA,GAAG,EAAEP,GAAI;;;;;WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,IAAC,OAAD;AACE,MAAA,IAAI,EAAC,gBADP;AAEE,MAAA,MAAM,EAAC,qFAFT;AAGE,MAAA,KAAK,EACH,+DAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAeE,IAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE,IAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAFF,CADF;AAuBD;;AA7ByD","sourcesContent":["import React from \"react\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nimport Project from \"./Project\";\n\nexport default class ProjectGallery extends React.Component {\n  render() {\n    const renderedProjects = [];\n    for (let p of this.props.projects) {\n      renderedProjects.push(<Project {...p}></Project>);\n    }\n    return (\n      <div>\n        <h2>Featured Projects:</h2>\n        <div\n          css={css`\n            display: flex;\n            width: 100%;\n            overflow-x: scroll;\n            align-items: stretch;\n          `}\n        >\n          <Project\n            name=\"dailybruin.com\"\n            flavor=\"a polling platform that allows you to generate and share polls all around the world\"\n            image={\n              \"https://wp.dailybruin.com/images/2020/06/web.breaking.AL_.jpg\"\n            }\n          ></Project>\n          <Project></Project>\n          <Project></Project>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}